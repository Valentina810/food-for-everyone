∕∕ DishService.java

package com.github.valentina810.foodforeveryone.service.dish;

import com.github.valentina810.foodforeveryone.domain.dish.Dish;

import java.util.List;

public interface DishService {
    Dish addDish(Dish dish);
    Dish findDishByName(String name);
    Dish findDishById(Long id);
    List<Dish> findAllDishes();
    Dish updateDish(Long id, Dish dish);
    void deleteDish(Long id);
    void deleteAllDishes();
}

∕∕ DishServiceImpl.java

package com.github.valentina810.foodforeveryone.service.dish;

import com.github.valentina810.foodforeveryone.domain.dish.Dish;
import com.github.valentina810.foodforeveryone.repository.dish.DishRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class DishServiceImpl implements DishService {

    private final DishRepository dishRepository;

    @Autowired
    public DishServiceImpl(DishRepository dishRepository
) {
        this.dishRepository = dishRepository;
    }

    @Override
    public Dish addDish(Dish dish) {
        return dishRepository.save(dish);
    }

    @Override
    public Dish findDishByName(String name) {
        return dishRepository.findByName(name);
    }

    @Override
    public Dish findDishById(Long id) {
        return dishRepository.findById(id).orElse(null);
    }

    @Override
    public List<Dish> findAllDishes() {
        return dishRepository.findAll();
    }

    @Override
    public Dish updateDish(Long id, Dish dish) {
        Dish existingDish = dishRepository.findById(id).orElse(null);
        if (existingDish != null) {
            existingDish.setName(dish.getName());
            existingDish.setDescription(dish.getDescription());
            return dishRepository.save(existingDish);
        }
        return null;
    }

    @Override
    public void deleteDish(Long id) {
        dishRepository.deleteById(id);
    }

    @Override
    public void deleteAllDishes() {
        dishRepository.deleteAll();
    }
}

∕∕ DishController.java

package com.github.valentina810.foodforeveryone.controller.dish;

import com.github.valentina810.foodforeveryone.domain.dish.Dish;
import com.github.valentina810.foodforeveryone.service.dish.DishService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/dishes")
public class DishController {

    private final DishService dishService;

    @Autowired
    public DishController(DishService dishService
) {
        this.dishService = dishService;
    }

    @PostMapping
    public Dish addDish(@RequestBody Dish dish) {
        return dishService.addDish(dish);
    }

    @GetMapping("/search")
    public Dish findDishByName(@RequestParam
 String name) {
        return dishService.findDishByName(name);
    }

    @GetMapping("/{id}")
    public Dish findDishById(@PathVariable Long
 id) {
        return dishService.findDishById(id);
    }

    @GetMapping
    public List<Dish> findAllDishes() {
        return dishService.findAllDishes();
    }

    @PutMapping("/{id}")
    public Dish updateDish(@PathVariable Long
 id, @RequestBody Dish dish) {
        return dishService.updateDish(id, dish);
    }

    @DeleteMapping("/{id}")
    public void deleteDish(@PathVariable Long id) {
        dishService.deleteDish(id);
    }

    @DeleteMapping
    public void deleteAllDishes() {
        dishService.deleteAllDishes();
    }
}